{"version":3,"file":"static/js/5.aed15061.chunk.js","mappings":"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","sources":["features/ModalChar/model/selectors/isLoadingCharsDataSelector/isLoadingDataChars.ts","webpack://studia-tg/./src/shared/ui/LangSwitcher/LangSwitcher.module.scss?00bc","shared/ui/LangSwitcher/LangSwitcher.tsx","shared/lib/hooks/useAppDispatch.ts","webpack://studia-tg/./src/entities/Profile/ui/CharCard/ProfileCard.module.scss?2c0d","entities/Profile/ui/CharCard/ProfileCard.tsx","shared/ui/Select/Select.tsx","webpack://studia-tg/./src/pages/CharactersPage/ui/CharactersPage.module.scss?8078","pages/CharactersPage/ui/CharactersPage.tsx","webpack://studia-tg/./src/shared/ui/BodyParam/BodyParam.module.scss?a30b","shared/ui/BodyParam/BodyParam.tsx","webpack://studia-tg/./src/shared/ui/GenderAndBirthYear/Gender.module.scss?5878","shared/ui/GenderAndBirthYear/Gender.tsx"],"sourcesContent":["import { RootState } from 'src/app/providers/StoreProvider/config/store';\n\nexport const IsLoadingDataChars = (state: RootState) => state.charsInfo.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"langBtn\":\"LangSwitcher_langBtn__BfdSe\"};","import { useTranslation } from 'react-i18next';\nimport React, { memo } from 'react';\nimport { Button, ButtonTheme } from '../Button/Button';\nimport { images } from '../../assets/icons/images';\nimport cls from './LangSwitcher.module.scss';\n\nexport const LangSwitcher = memo(() => {\n    const { i18n } = useTranslation();\n\n    const toggle = async () => {\n        i18n.changeLanguage(i18n.language === 'en' ? 'wo' : 'en');\n    };\n\n    return (\n        <Button\n            theme={ButtonTheme.CLEAR}\n            onClick={toggle}\n        >\n            <img src={images.BtnLoadNewChars} alt=\"load-new-char\" className={cls.langBtn} />\n        </Button>\n    );\n});\n","import { AppDispatch } from 'src/app/providers/StoreProvider/config/store';\nimport { useDispatch } from 'react-redux';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n","// extracted by mini-css-extract-plugin\nexport default {\"ProfileCard\":\"ProfileCard_ProfileCard__LeYiF\",\"charName\":\"ProfileCard_charName__JWXVL\",\"bodyInfo\":\"ProfileCard_bodyInfo__ihrAj\",\"paramChar\":\"ProfileCard_paramChar__2i27V\",\"genderAndBirthYear\":\"ProfileCard_genderAndBirthYear__mp0Tv\",\"charInfo\":\"ProfileCard_charInfo__NqSmS\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Gender } from 'src/shared/ui/GenderAndBirthYear/Gender';\nimport { useAppDispatch } from 'src/shared/lib/hooks/useAppDispatch';\nimport { BodyParam } from 'src/shared/ui/BodyParam/BodyParam';\nimport { getCurrenCharRequest } from '../../model/services/getCurrentCharRequest/getCurrenCharRequest';\nimport cls from './ProfileCard.module.scss';\n\ninterface IProps {\n    name?: string\n    height?: string\n    mass?: string\n    gender?: string\n    onShowModal?: () => void\n    birth_year?: string\n    url?: string\n}\n\nexport const ProfileCard = (props:IProps) => {\n    const dispatch = useAppDispatch();\n    const {\n        name,\n        height,\n        mass,\n        gender,\n        birth_year: birthYear,\n        onShowModal,\n        url,\n    } = props;\n    const { t } = useTranslation('charactersPage');\n\n    const handleClickCard = () => {\n        if (onShowModal) {\n            onShowModal();\n        }\n        dispatch(getCurrenCharRequest(url || ''));\n    };\n    return (\n        <div className={cls.ProfileCard} onClick={handleClickCard} data-testid=\"profile-modal\">\n            <div className={cls.charInfo}>\n                <div className={cls.charName}>{t('charname', { returnObjects: true, name: `${name}` })}</div>\n                <div className={cls.bodyInfo}>\n                    <div className={cls.paramChar}>\n                        <BodyParam bodyParam={height || '0'} paramName={t('height')} />\n                    </div>\n                    <div className={cls.paramChar}>\n                        <BodyParam bodyParam={mass || '0'} paramName={t('mass')} />\n                    </div>\n                </div>\n                <div className={cls.genderAndBirthYear}>\n                    {gender !== 'n/a' && <Gender peopleInfo={gender} className={gender} />}\n                    {birthYear !== 'unknown' && <Gender peopleInfo={birthYear} className=\"birthYear\" />}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { FC } from 'react';\nimport Select from 'react-select';\nimport { IOption } from 'src/pages/CharactersPage/ui/CharactersPage';\nimport './Select.scss';\n\ninterface IProps {\n    options: IOption[]\n    onChange:(open: IOption)=> void\n    label: string\n}\n\nexport const SelectMenu: FC<IProps> = (props) => {\n    const { options, onChange, label = 'All' } = props;\n\n    return (\n        <Select\n            options={options}\n            onChange={onChange}\n            placeholder={label}\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n        />\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"CharactersPage_profileContainer__pzZ7k\",\"charsPage\":\"CharactersPage_charsPage__dk6-f\",\"currentLang\":\"CharactersPage_currentLang__QOmvh\",\"title\":\"CharactersPage_title__VMCn4\",\"selectContainer\":\"CharactersPage_selectContainer__Ho7Wi\",\"charsBlock\":\"CharactersPage_charsBlock__yE5AL\",\"footer\":\"CharactersPage_footer__n-dHZ\",\"langSwitcherBtn\":\"CharactersPage_langSwitcherBtn__TJwfG\"};","import React, {\n    memo, useCallback, useEffect, useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport {\n    Char,\n    countCharsSelector, getCharsDataSelector, getCharsRequest, ProfileCharModal,\n} from 'src/features/ModalChar';\nimport { LangSwitcher } from 'src/shared/ui/LangSwitcher/LangSwitcher';\nimport { PageLoader } from 'src/shared/ui/PageLoader/PageLoader';\nimport { ProfileCard } from 'src/entities/Profile';\nimport { useAppDispatch } from 'src/shared/lib/hooks/useAppDispatch';\nimport { SelectMenu } from 'src/shared/ui/Select/Select';\nimport {\n    IsLoadingDataChars,\n} from 'src/features/ModalChar/model/selectors/isLoadingCharsDataSelector/isLoadingDataChars';\nimport cls from './CharactersPage.module.scss';\n\nexport interface IOption {\n    value: string\n    label: string\n}\n\nconst CharactersPage = memo(() => {\n    const dispatch = useAppDispatch();\n    const { t } = useTranslation('charactersPage');\n    const [selectedOptions, setSelectedOptions] = useState<IOption>({ value: 'All', label: 'All' });\n    const [isProfileModal, setIsProfileModal] = useState<boolean>(false);\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const [fetching, setFetching] = useState<boolean>(true);\n    const [fetchTimer, setFetchTimer] = useState<boolean>(false);\n\n    const eyes = ['All', 'brown', 'red', 'blue', 'white'];\n\n    const charsData = useSelector(getCharsDataSelector);\n    const totalCount = useSelector(countCharsSelector);\n    const isLoading = useSelector(IsLoadingDataChars);\n\n    const pageSize = 9;\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    const optionsEyes: IOption[] = eyes.map((color) => ({\n        value: color,\n        label: color,\n    }));\n\n    const onCloseModal = useCallback(() => {\n        setIsProfileModal(false);\n    }, []);\n\n    const onShowModal = useCallback(() => {\n        setIsProfileModal(true);\n    }, []);\n\n    useEffect(() => {\n        if (!fetchTimer) {\n            if (fetching || currentPage < totalPageCount\n            ) {\n                dispatch(getCharsRequest({\n                    currentPage, setCurrentPage, setFetching,\n                }));\n                setFetchTimer(true);\n                setTimeout(() => {\n                    setFetchTimer(false);\n                }, 1000);\n            }\n        }\n        // eslint-disable-next-line\n    }, [dispatch, fetching]);\n\n    const handleOnChange = (option: IOption) => {\n        setSelectedOptions({ value: option.value, label: option.label });\n    };\n\n    const filterChars = selectedOptions.value === 'All'\n        ? charsData\n        : charsData.filter((item) => item.eye_color === selectedOptions.value && item);\n\n    const scrollHandler = (): void => {\n        if (document.documentElement.scrollHeight - (document.documentElement.scrollTop + window.innerHeight) < 100) {\n            setFetching(true);\n        }\n    };\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n\n        return () => {\n            document.addEventListener('scroll', scrollHandler);\n        };\n    }, []);\n\n    return (\n        <div className={cls.profileContainer}>\n            {isProfileModal && (\n                <ProfileCharModal\n                    isOpen={isProfileModal}\n                    onClose={onCloseModal}\n                />\n            )}\n            <div className={cls.charsPage}>\n                <div className={cls.currentLang}>\n                    {t('language')}\n                    :\n                    {i18n.language}\n                </div>\n\n                <h1 className={cls.title}>\n                    {`${totalCount} ${t('Peoples for you to choose your favorite')}`}\n                </h1>\n                <div className={cls.selectContainer}>\n                    <p>{t('eye')}</p>\n                    <SelectMenu\n                        options={optionsEyes}\n                        onChange={handleOnChange}\n                        label={selectedOptions.label}\n                    />\n                </div>\n                <>\n                    {isLoading && !filterChars\n                        ? <PageLoader />\n                        : (\n                            <div className={cls.charsBlock}>\n                                {filterChars.map((char: Char) => (\n                                    <ProfileCard\n                                        key={`${char.birth_year}${char.url}`}\n                                        onShowModal={onShowModal}\n                                        {...char}\n                                    />\n                                ))}\n                            </div>\n                        )}\n                </>\n                <footer className={cls.footer}>\n                    <div className={cls.langSwitcherBtn}>\n                        <LangSwitcher />\n                    </div>\n                </footer>\n            </div>\n        </div>\n    );\n});\n\nexport default CharactersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"param\":\"BodyParam_param__WRLNt\"};","import { memo } from 'react';\nimport cls from './BodyParam.module.scss';\n\nexport interface BodyParamProps {\n    bodyParam:string\n    paramName:string\n}\n\nexport const BodyParam = memo((props: BodyParamProps) => {\n    const { bodyParam, paramName } = props;\n    return (\n        <>\n            <div className={cls.param}>\n                {bodyParam !== 'unknown' ? bodyParam : 0 }\n            </div>\n            <span>{paramName}</span>\n        </>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"genderContainer\":\"Gender_genderContainer__23vnG\",\"male\":\"Gender_male__XWTdR\",\"female\":\"Gender_female__WEYJ3\",\"hermaphrodite\":\"Gender_hermaphrodite__RFDTY\",\"birthYear\":\"Gender_birthYear__o7cNQ\"};","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport cls from './Gender.module.scss';\n\ninterface IProps {\n    gender?: string\n    className?: string\n    peopleInfo?: string\n\n}\n\nexport const Gender: FC<IProps> = (props) => {\n    const {\n        className, gender, peopleInfo,\n    } = props;\n\n    const { t } = useTranslation('charactersPage');\n\n    return (\n        <div className={cls.genderContainer}>\n            {gender !== 'n/a' && (\n                <div className={cls[className!]}>\n                    {t('peopleInfo', { returnObjects: true, info: `${peopleInfo}` })}\n                </div>\n            )}\n        </div>\n\n    );\n};\n"],"names":["IsLoadingDataChars","state","charsInfo","isLoading","LangSwitcher","memo","i18n","useTranslation","toggle","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","changeLanguage","language","stop","apply","arguments","_jsx","Button","theme","ButtonTheme","onClick","children","src","images","alt","className","cls","useAppDispatch","useDispatch","ProfileCard","props","dispatch","name","height","mass","gender","birthYear","birth_year","onShowModal","url","t","getCurrenCharRequest","_jsxs","returnObjects","concat","BodyParam","bodyParam","paramName","Gender","peopleInfo","SelectMenu","options","onChange","_props$label","label","Select","placeholder","classNamePrefix","_useState","useState","value","_useState2","_slicedToArray","selectedOptions","setSelectedOptions","_useState3","_useState4","isProfileModal","setIsProfileModal","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","fetching","setFetching","_useState9","_useState10","fetchTimer","setFetchTimer","charsData","useSelector","getCharsDataSelector","totalCount","countCharsSelector","totalPageCount","Math","ceil","optionsEyes","map","color","onCloseModal","useCallback","useEffect","getCharsRequest","setTimeout","filterChars","filter","item","eye_color","scrollHandler","document","documentElement","scrollHeight","scrollTop","window","innerHeight","addEventListener","ProfileCharModal","isOpen","onClose","option","_Fragment","PageLoader","char","_objectSpread","info"],"sourceRoot":""}