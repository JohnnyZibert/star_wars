{"version":3,"file":"static/js/444.7fd79c8f.chunk.js","mappings":"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","sources":["features/ModalChar/model/selectors/isLoadingCharsDataSelector/isLoadingDataChars.ts","entities/Profile/model/selectors/currentChar/currentChar.ts","webpack://studia-tg/./src/features/ModalChar/ui/PofileChar/ProfileChar.module.scss?fedf","features/ModalChar/ui/PofileChar/ProfileChar.tsx","webpack://studia-tg/./src/shared/ui/BodyParam/BodyParam.module.scss?a30b","shared/ui/BodyParam/BodyParam.tsx","webpack://studia-tg/./src/shared/ui/GenderAndBirthYear/Gender.module.scss?5878","shared/ui/GenderAndBirthYear/Gender.tsx"],"sourcesContent":["import { RootState } from 'src/app/providers/StoreProvider/config/store';\n\nexport const IsLoadingDataChars = (state: RootState) => state.charsInfo.isLoading;\n","import { RootState } from 'src/app/providers/StoreProvider/config/store';\n\nexport const getCurrentCharsSelector = (state: RootState) => state.currentChar.data;\n","// extracted by mini-css-extract-plugin\nexport default {\"ProfileChar\":\"ProfileChar_ProfileChar__4gsCQ\",\"iconContainer\":\"ProfileChar_iconContainer__L5G-2\",\"genderContainer\":\"ProfileChar_genderContainer__LTZaG\",\"charInfo\":\"ProfileChar_charInfo__jz8ZG\",\"nameChar\":\"ProfileChar_nameChar__FZ5SI\",\"charInfoBox\":\"ProfileChar_charInfoBox__jBzYm\",\"bodyParam\":\"ProfileChar_bodyParam__oEkyt\",\"paramContainer\":\"ProfileChar_paramContainer__cKODF\",\"params\":\"ProfileChar_params__o0iQN\"};","import { useTranslation } from 'react-i18next';\nimport React, { memo } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { images } from 'src/shared/assets/icons/images';\nimport { getCurrentCharsSelector } from 'src/entities/Profile/model/selectors/currentChar/currentChar';\nimport { Gender } from 'src/shared/ui/GenderAndBirthYear/Gender';\nimport { BodyParam } from 'src/shared/ui/BodyParam/BodyParam';\nimport { PageLoader } from 'src/shared/ui/PageLoader/PageLoader';\nimport cls from './ProfileChar.module.scss';\nimport { IsLoadingDataChars } from '../../model/selectors/isLoadingCharsDataSelector/isLoadingDataChars';\n\nconst ProfileChar = memo(() => {\n    const { t } = useTranslation();\n\n    const {\n        skin_color: skin,\n        eye_color: eye,\n        hair_color: hair,\n        height,\n        mass,\n        name,\n        gender,\n        birth_year: birthYear,\n    } = useSelector(getCurrentCharsSelector);\n    const isLoading = useSelector(IsLoadingDataChars);\n\n    return (\n        <div className={cls.ProfileChar}>\n            {isLoading\n                ? <PageLoader />\n                : (\n                    <>\n                        <div className={cls.iconContainer}>\n                            {gender && gender === 'male' && <img src={images.male} alt=\"avatar-Chars\" />}\n                            {gender && gender === 'female' && <img src={images.female} alt=\"avatar-Chars\" />}\n                            {gender && gender === 'n/a' && <img src={images.otherRace} alt=\"avatar-Chars\" />}\n                            <div className={cls.genderContainer}>\n                                {gender !== 'n/a' && <Gender peopleInfo={gender} className={gender} />}\n                                {birthYear && <Gender peopleInfo={birthYear} className=\"birthYear\" />}\n                            </div>\n                        </div>\n                        <div className={cls.charInfo}>\n                            <div className={cls.nameChar}>\n                                {name}\n                            </div>\n                            <div className={cls.charInfoBox}>\n                                <ul>\n                                    <li>\n                                        {t(`hair color: ${hair}`)}\n                                    </li>\n                                    <li>\n                                        {t(`skin color: ${skin}`)}\n                                    </li>\n                                    <li>\n                                        {t(`eye color: ${eye}`)}\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className={cls.paramContainer}>\n                                <div className={cls.params}>\n                                    <BodyParam bodyParam={height} paramName=\"height\" />\n                                </div>\n                                <div className={cls.params}>\n                                    <BodyParam bodyParam={mass} paramName=\"mass\" />\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )}\n        </div>\n    );\n});\n\nexport default ProfileChar;\n","// extracted by mini-css-extract-plugin\nexport default {\"param\":\"BodyParam_param__WRLNt\"};","import { memo } from 'react';\nimport cls from './BodyParam.module.scss';\n\nexport interface BodyParamProps {\n    bodyParam:string\n    paramName:string\n}\n\nexport const BodyParam = memo((props: BodyParamProps) => {\n    const { bodyParam, paramName } = props;\n    return (\n        <>\n            <div className={cls.param}>\n                {bodyParam !== 'unknown' ? bodyParam : 0 }\n            </div>\n            <span>{paramName}</span>\n        </>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"genderContainer\":\"Gender_genderContainer__23vnG\",\"male\":\"Gender_male__XWTdR\",\"female\":\"Gender_female__WEYJ3\",\"hermaphrodite\":\"Gender_hermaphrodite__RFDTY\",\"birthYear\":\"Gender_birthYear__o7cNQ\"};","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport cls from './Gender.module.scss';\n\ninterface IProps {\n    gender?: string\n    className?: string\n    peopleInfo?: string\n\n}\n\nexport const Gender: FC<IProps> = (props) => {\n    const {\n        className, gender, peopleInfo,\n    } = props;\n\n    const { t } = useTranslation('charactersPage');\n\n    return (\n        <div className={cls.genderContainer}>\n            {gender !== 'n/a' && (\n                <div className={cls[className!]}>\n                    {t('peopleInfo', { returnObjects: true, info: `${peopleInfo}` })}\n                </div>\n            )}\n        </div>\n\n    );\n};\n"],"names":["IsLoadingDataChars","state","charsInfo","isLoading","getCurrentCharsSelector","currentChar","data","memo","t","useTranslation","_useSelector","useSelector","skin","skin_color","eye","eye_color","hair","hair_color","height","mass","name","gender","birthYear","birth_year","_jsx","className","cls","children","PageLoader","_jsxs","_Fragment","src","images","alt","Gender","peopleInfo","concat","BodyParam","bodyParam","paramName","props","returnObjects","info"],"sourceRoot":""}